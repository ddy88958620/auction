## log
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=123456@
# 连接超时时间（毫秒）
spring.redis.timeout=5000
# 两次操作的间隔超时时间
spring.redis.so-timeout=5000
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=3000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=5000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 默认5, (Nodes count) - 1 = max-redirects
#spring.redis.cluster.max-redirects=5
#spring.redis.cluster.nodes=10.168.2.25:7000,10.168.2.25:7001,10.168.2.25:7002,10.168.2.25:7003,10.168.2.25:7004,10.168.2.25:7005

## zookeeper
spring.zookeeper.nodes[0]=10.168.4.103:2181
#spring.zookeeper.nodes[1]=10.168.2.64:2181
#spring.zookeeper.nodes[2]=10.168.2.65:2181
spring.zookeeper.session-timeout=30000
spring.zookeeper.base-sleep-time=1000
spring.zookeeper.max-retries=3

logging.path=/Users/yangyang/Documents/work/workspacebbid/logs

# 自动出价连续 N 次后判定拍中
auction.auto-bid.times-to-hit=3
# 竞拍倒计时结束前自动出价最小毫秒数
auction.auto-bid.min-time-before-cd-end=2000
# 距离上一次委托出价后随机等待 N 毫秒后执行一下次委托出价；
# 等待出价时间占倒计时区间比例（倒计时前半段时间计算）
auction.delegate-bid.delay-time-range=0.6
# 委托出价，最大随机等待出价时间占倒计时区间比例
auction.delegate-bid.min-delay-time=1000
# 保留的出价记录条数
auction.bid.remain-count=100