server.port=${AUCTION_ORDER_SERVER_PORT}
spring.datasource.name=auction-order
spring.datasource.url=${AUCTION_ORDER_SPRING_DATASOURCE_URL}
spring.datasource.username=${AUCTION_ORDER_SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${AUCTION_ORDER_SPRING_DATASOURCE_PASSWORD}

## Dubbo 服务提供者配置
spring.dubbo.application.name=auction-order-server
spring.dubbo.registry.address=${AUCTION_ORDER_SPRING_DUBBO_REGISTRY_ADDRESS}
spring.dubbo.registry.file=${AUCTION_ORDER_SPRING_DUBBO_REGISTRY_FILE}
spring.dubbo.protocol.name=dubbo
spring.dubbo.protocol.port=${AUCTION_ORDER_SPRING_DUBBO_PROTOCOL_PORT}
spring.dubbo.scan=com.trump.auction.order.api


#redis cluster################################
##Redis
# Redis数据库索引（默认为0）
#spring.redis.database=0
# Redis服务器地址
#spring.redis.host=localhost
# Redis服务器连接端口
#spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=${AUCTION_ORDER_SPRING_REDIS_PASSWORD}
# 连接超时时间（毫秒）
spring.redis.timeout=5000
# 两次操作的间隔超时时间
#spring.redis.so-timeout=5000
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=3000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=5000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 默认5, (Nodes count) - 1 = max-redirects
spring.redis.cluster.max-redirects=5
spring.redis.cluster.nodes=${AUCTION_ORDER_SPRING_REDIS_CLUSTER_NODES}

#redis cluster################################
## log
#logging.file=loan-impl.log
logging.path=${AUCTION_ORDER_LOGGING_PATH}

## Spring Boot Actuator config
jackson.serialization.indent_output=true
#management.security.roles=SUPERUSER
management.context-path=/monitor/actuator
management.security.enabled=true
endpoints.heapdump.enabled=false
endpoints.health.sensitive=false
## Spring security config
## 对Druid监控和Actuator做简单的认证
security.user.name=admin
security.user.password=${AUCTION_ORDER_SPRING_SECURITY_PASSWORD}
security.basic.path=/monitor/**
security.basic.enabled=true
