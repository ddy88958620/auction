<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trump.auction.trade.dao.AuctionProductInfoDao" >
  <resultMap id="BaseResultMap" type="com.trump.auction.trade.domain.AuctionProductInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_price" property="productPrice" jdbcType="DECIMAL" />
    <result column="product_num" property="productNum" jdbcType="INTEGER" />
    <result column="rule_id" property="ruleId" jdbcType="INTEGER" />
    <result column="auction_start_time" property="auctionStartTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_ip" property="userIp" jdbcType="VARCHAR" />
    <result column="shelves_delay_time" property="shelvesDelayTime" jdbcType="INTEGER" />
    <result column="classify_id" property="classifyId" jdbcType="INTEGER" />
    <result column="classify_name" property="classifyName" jdbcType="VARCHAR" />
    <result column="floor_price" property="floorPrice" jdbcType="DECIMAL" />
    <result column="float_price" jdbcType="VARCHAR" property="floatPrice" />
    <result column="on_shelf_time" jdbcType="TIMESTAMP" property="onShelfTime" />
    <result column="under_shelf_time" jdbcType="TIMESTAMP" property="underShelfTime" />
    <result column="auction_rule" property="auctionRule" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, product_id, product_name, product_price, product_num, rule_id, auction_start_time,
    status, create_time, update_time, user_id, user_ip, shelves_delay_time, classify_id,
    classify_name, floor_price, float_price, on_shelf_time, under_shelf_time,auction_rule
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from auction_product_info
    where id = #{id,jdbcType=INTEGER}
  </select>


  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.trump.auction.trade.domain.AuctionProductInfo" >
    insert into auction_product_info (id, product_id, product_name,
    product_price, product_num, rule_id,
    auction_start_time, status, create_time,
    update_time, user_id, user_ip,
    shelves_delay_time, classify_id, classify_name,
    floor_price, float_price, on_shelf_time,
    under_shelf_time,auction_rule)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR},
    #{productPrice,jdbcType=DECIMAL}, #{productNum,jdbcType=INTEGER}, #{ruleId,jdbcType=INTEGER},
    #{auctionStartTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
    #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{userIp,jdbcType=VARCHAR},
    #{shelvesDelayTime,jdbcType=INTEGER}, #{classifyId,jdbcType=INTEGER}, #{classifyName,jdbcType=VARCHAR},
    #{floorPrice,jdbcType=DECIMAL}, #{floatPrice,jdbcType=VARCHAR}, #{onShelfTime,jdbcType=TIMESTAMP},
    #{underShelfTime,jdbcType=TIMESTAMP},#{auctionRule})
  </insert>

  <update id="batchOff" parameterType="list">
    <foreach item="vo" collection="vos" separator=";"  index="index">
      update auction_product_info set update_time=now(),user_id=#{vo.userId},
      user_ip=#{vo.userIp},under_shelf_time=now(),status=#{vo.status},on_shelf_time=#{vo.onShelfTime}
      WHERE id = #{vo.id}
    </foreach>
  </update>

  <update id="auctionOn" parameterType="com.trump.auction.trade.vo.AuctionProductInfoVo">
    update auction_product_info set update_time=now(),user_id=#{userId},
      user_ip=#{userIp},under_shelf_time=#{underShelfTime},status=#{status},on_shelf_time=now()
      WHERE id = #{id}
  </update>
  <!--批量更新拍品状态-->
  <update id="updAuctionProdStatus"  parameterType="list">
    update auction_product_info
    set status = #{status,jdbcType=INTEGER}
    where id in
    <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <!--更新拍品定时的时间和状态-->
  <update id="updAuctionProdDateAndStatus" parameterType="com.trump.auction.trade.domain.AuctionProductInfo">
    update auction_product_info
    set
    auction_start_time = #{auctionStartTime,jdbcType=TIMESTAMP},
    status = #{status,jdbcType=INTEGER}
    where id=#{id,jdbcType=INTEGER}
  </update>

  <update id="updAuctionProdStatusTime" parameterType="com.trump.auction.trade.domain.AuctionProductInfo">
    update auction_product_info
    set
    auction_start_time = #{auctionStartTime,jdbcType=TIMESTAMP},
    on_shelf_time = #{onShelfTime},
    under_shelf_time = #{underShelfTime},
    update_time = now(),
    status = 1
    where id=#{id,jdbcType=INTEGER}
  </update>

  <select id="queryProdByClassify" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from auction_product_info p
    <where>
      (status=1  or 1=(select count(1) from auction_info a where a.auction_prod_id=p.id and status in(1,3)))
      <if test="classifyId != null" >
       and  classify_id=#{classifyId}
      </if>
    </where>
  </select>
  <!--更新-->
  <update id="updateByPrimaryKeySelective" parameterType="com.trump.auction.trade.domain.AuctionProductInfo" >
    update auction_product_info
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null" >
        product_price = #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="productNum != null" >
        product_num = #{productNum,jdbcType=INTEGER},
      </if>
      <if test="ruleId != null" >
        rule_id = #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="auctionStartTime != null" >
        auction_start_time = #{auctionStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userIp != null" >
        user_ip = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="shelvesDelayTime != null" >
        shelves_delay_time = #{shelvesDelayTime,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null" >
        classify_id = #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="classifyName != null" >
        classify_name = #{classifyName,jdbcType=VARCHAR},
      </if>
      <if test="floorPrice != null" >
        floor_price = #{floorPrice,jdbcType=DECIMAL},
      </if>
      <if test="floatPrice != null" >
        float_price = #{floatPrice,jdbcType=VARCHAR},
      </if>
      <if test="onShelfTime != null" >
        on_shelf_time = #{onShelfTime,jdbcType=TIMESTAMP},
      </if>
      <if test="underShelfTime != null" >
        under_shelf_time = #{underShelfTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auctionRule != null" >
        auction_rule = #{auctionRule},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateProductStatus" parameterType="com.trump.auction.trade.vo.AuctionProductInfoVo">
    update auction_product_info
    set
    status = #{status,jdbcType=INTEGER},
    <if test="underShelfTime != null" >
      under_shelf_time = #{underShelfTime,jdbcType=TIMESTAMP},
    </if>
    update_time = now()
    where id=#{id,jdbcType=INTEGER}
  </update>

  <update id="updateProductNum">
    update auction_product_info
    set
    product_num = #{prodNum,jdbcType=INTEGER},
    update_time = now()
    where id=#{prodId,jdbcType=INTEGER}
  </update>
</mapper>